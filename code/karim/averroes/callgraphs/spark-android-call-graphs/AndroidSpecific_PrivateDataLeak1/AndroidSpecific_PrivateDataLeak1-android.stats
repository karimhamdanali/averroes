...
running Spark for AndroidSpecific_PrivateDataLeak1
Loading properties...
Generating the call graph for an Android apk.
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.035093818 seconds
Using 'android/android-17/android.jar' as android.jar
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.PrivateDateLeakage $r0;
        android.os.Bundle $r1;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.PrivateDateLeakage;
        specialinvoke $r0.<de.ecspride.PrivateDateLeakage: void <init>()>();
        if $i0 == 0 goto label6;

     label1:
        $r1 = new android.os.Bundle;
        specialinvoke $r1.<android.os.Bundle: void <init>()>();
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onCreate(android.os.Bundle)>($r1);
        $r1 = null;

     label2:
        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label1;

     label3:
        if $i0 == 4 goto label5;

        if $i0 == 5 goto label4;

        if $i0 == 6 goto label1;

     label4:
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onRestart()>();
        if $i0 == 7 goto label2;

     label5:
        if $i0 == 8 goto label6;

     label6:
        if $i0 == 9 goto label0;

        return;
    }

Warning: java.lang.ref.Finalizer is a phantom class!
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.4 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 8.5 seconds.
[Spark] Solution found in 8.5 seconds.
Callback analysis done.
Warning: EditText is a phantom class!
Warning: de.ecspride.EditText is a phantom class!
Warning: android.view.EditText is a phantom class!
Warning: requestFocus is a phantom class!
Warning: de.ecspride.requestFocus is a phantom class!
Warning: android.view.requestFocus is a phantom class!
Warning: android.widget.requestFocus is a phantom class!
Warning: android.webkit.requestFocus is a phantom class!
Could not find layout class requestFocus
Warning: Button is a phantom class!
Warning: de.ecspride.Button is a phantom class!
Warning: android.view.Button is a phantom class!
Found 3 layout controls in file res/layout/activity_private_date_leakage.xml
Transforming dummyMainClass... 
Transforming de.ecspride.PrivateDateLeakage... 
Using 'android/android-17/android.jar' as android.jar
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.PrivateDateLeakage $r0;
        android.os.Bundle $r1;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.PrivateDateLeakage;
        specialinvoke $r0.<de.ecspride.PrivateDateLeakage: void <init>()>();
        if $i0 == 0 goto label6;

     label1:
        $r1 = new android.os.Bundle;
        specialinvoke $r1.<android.os.Bundle: void <init>()>();
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onCreate(android.os.Bundle)>($r1);
        $r1 = null;

     label2:
        if $i0 == 1 goto label2;

        if $i0 == 2 goto label3;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label1;

     label3:
        if $i0 == 5 goto label5;

        if $i0 == 6 goto label4;

        if $i0 == 7 goto label1;

     label4:
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onRestart()>();
        if $i0 == 8 goto label2;

     label5:
        if $i0 == 9 goto label6;

     label6:
        if $i0 == 10 goto label0;

        return;
    }

Warning: java.lang.ref.Finalizer is a phantom class!
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 3.0 seconds.
[Spark] Solution found in 3.0 seconds.
Running incremental callback analysis for 1 components...
Incremental callback analysis done.
Transforming dummyMainClass... 
Transforming de.ecspride.PrivateDateLeakage... 
Found 3 callback methods for 1 components
Entry point calculation done.
Created a SourceSinkManager with 127 sources, 61 sinks, and 3 callback methods.
Using 'android/android-17/android.jar' as android.jar
Warning: java.lang.ref.Finalizer is a phantom class!
de.ecspride.PrivateDateLeakage
	<de.ecspride.PrivateDateLeakage: void onRestart()>
	<de.ecspride.PrivateDateLeakage: void sendMessage(android.view.View)>
	<de.ecspride.PrivateDateLeakage: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.PrivateDateLeakage $r0;
        android.os.Bundle $r1;
        android.view.View $r2;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.PrivateDateLeakage;
        specialinvoke $r0.<de.ecspride.PrivateDateLeakage: void <init>()>();
        if $i0 == 0 goto label7;

     label1:
        $r1 = new android.os.Bundle;
        specialinvoke $r1.<android.os.Bundle: void <init>()>();
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onCreate(android.os.Bundle)>($r1);
        $r1 = null;

     label2:
        if $i0 == 1 goto label3;

        $r2 = new android.view.View;
        specialinvoke $r2.<android.view.View: void <init>()>();
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void sendMessage(android.view.View)>($r2);
        $r2 = null;

     label3:
        if $i0 == 2 goto label2;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label4;

        if $i0 == 5 goto label2;

        if $i0 == 6 goto label1;

     label4:
        if $i0 == 7 goto label6;

        if $i0 == 8 goto label5;

        if $i0 == 9 goto label1;

     label5:
        virtualinvoke $r0.<de.ecspride.PrivateDateLeakage: void onRestart()>();
        if $i0 == 10 goto label2;

     label6:
        if $i0 == 11 goto label7;

     label7:
        if $i0 == 12 goto label0;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 40228
Initially reachable methods: 7
Classes with at least one reachable method: 6
[Spark] Pointer Assignment Graph in 0.3 seconds.
Total types: 5868
[Spark] Type masks in 0.0 seconds.
VarNodes: 623
FieldRefNodes: 35
AllocNodes: 258
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 258 nodes.
Now handling field references
Worklist has 29 nodes.
Now handling field references
Worklist has 55 nodes.
Now handling field references
Worklist has 2 nodes.
Now handling field references
[Spark] Propagation in 1.5 seconds.
[Spark] Solution found in 2.2 seconds.
[Spark] Number of reachable methods: 524
Total time to finish: 39.12
=================================================
# edges = 18
=================================================

elapsed time: 41.81s
