...
running Spark for Callbacks_Button2
Loading properties...
Generating the call graph for an Android apk.
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.019383058 seconds
Using 'android/android-17/android.jar' as android.jar
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.Button2 $r0;
        android.os.Bundle $r1;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.Button2;
        specialinvoke $r0.<de.ecspride.Button2: void <init>()>();
        if $i0 == 0 goto label6;

     label1:
        $r1 = new android.os.Bundle;
        specialinvoke $r1.<android.os.Bundle: void <init>()>();
        virtualinvoke $r0.<de.ecspride.Button2: void onCreate(android.os.Bundle)>($r1);
        $r1 = null;

     label2:
        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label1;

     label3:
        if $i0 == 4 goto label5;

        if $i0 == 5 goto label4;

        if $i0 == 6 goto label1;

     label4:
        if $i0 == 7 goto label2;

     label5:
        if $i0 == 8 goto label6;

     label6:
        if $i0 == 9 goto label0;

        return;
    }

Warning: java.lang.ref.Finalizer is a phantom class!
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.2 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 4.9 seconds.
[Spark] Solution found in 4.9 seconds.
Callback analysis done.
Warning: Button is a phantom class!
Warning: de.ecspride.Button is a phantom class!
Warning: android.view.Button is a phantom class!
Found 3 layout controls in file res/layout/activity_button2.xml
Transforming dummyMainClass... 
Transforming de.ecspride.Button2... 
Using 'android/android-17/android.jar' as android.jar
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.Button2 $r0;
        android.os.Bundle $r1;
        de.ecspride.Button2$2 $r2;
        android.view.View $r3, $r5;
        de.ecspride.Button2$1 $r4;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.Button2;
        specialinvoke $r0.<de.ecspride.Button2: void <init>()>();
        if $i0 == 0 goto label8;

     label1:
        $r1 = new android.os.Bundle;
        specialinvoke $r1.<android.os.Bundle: void <init>()>();
        virtualinvoke $r0.<de.ecspride.Button2: void onCreate(android.os.Bundle)>($r1);
        $r1 = null;

     label2:
        $r2 = new de.ecspride.Button2$2;
        specialinvoke $r2.<de.ecspride.Button2$2: void <init>(de.ecspride.Button2)>($r0);
        if $i0 == 1 goto label3;

        $r3 = new android.view.View;
        specialinvoke $r3.<android.view.View: void <init>()>();
        virtualinvoke $r2.<de.ecspride.Button2$2: void onClick(android.view.View)>($r3);
        $r3 = null;

     label3:
        $r4 = new de.ecspride.Button2$1;
        specialinvoke $r4.<de.ecspride.Button2$1: void <init>(de.ecspride.Button2)>($r0);
        if $i0 == 2 goto label4;

        $r5 = new android.view.View;
        specialinvoke $r5.<android.view.View: void <init>()>();
        virtualinvoke $r4.<de.ecspride.Button2$1: void onClick(android.view.View)>($r5);
        $r5 = null;

     label4:
        if $i0 == 3 goto label2;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label5;

        if $i0 == 6 goto label2;

        if $i0 == 7 goto label1;

     label5:
        if $i0 == 8 goto label7;

        if $i0 == 9 goto label6;

        if $i0 == 10 goto label1;

     label6:
        if $i0 == 11 goto label2;

     label7:
        if $i0 == 12 goto label8;

     label8:
        if $i0 == 13 goto label0;

        return;
    }

Warning: java.lang.ref.Finalizer is a phantom class!
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.5 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 3.5 seconds.
[Spark] Solution found in 3.5 seconds.
Running incremental callback analysis for 1 components...
Incremental callback analysis done.
Transforming dummyMainClass... 
Transforming de.ecspride.Button2... 
Found 4 callback methods for 1 components
Entry point calculation done.
Created a SourceSinkManager with 127 sources, 61 sinks, and 4 callback methods.
Using 'android/android-17/android.jar' as android.jar
Warning: java.lang.ref.Finalizer is a phantom class!
de.ecspride.Button2
	<de.ecspride.Button2$2: void onClick(android.view.View)>
	<de.ecspride.Button2: void clickOnButton3(android.view.View)>
	<de.ecspride.Button2$1: void onClick(android.view.View)>
	<de.ecspride.Button2: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod()
    {
        int $i0;
        de.ecspride.Button2 $r0, $r3, $r6;
        de.ecspride.Button2$2 $r1, $r11;
        android.view.View $r2, $r5, $r9, $r10, $r12;
        de.ecspride.Button2$1 $r4, $r8;
        android.os.Bundle $r7;

        $i0 = 0;

     label0:
        $r0 = new de.ecspride.Button2;
        specialinvoke $r0.<de.ecspride.Button2: void <init>()>();
        $r1 = new de.ecspride.Button2$2;
        specialinvoke $r1.<de.ecspride.Button2$2: void <init>(de.ecspride.Button2)>($r0);
        if $i0 == 0 goto label3;

     label1:
        if $i0 == 1 goto label2;

        $r2 = new android.view.View;
        specialinvoke $r2.<android.view.View: void <init>()>();
        virtualinvoke $r1.<de.ecspride.Button2$2: void onClick(android.view.View)>($r2);
        $r2 = null;

     label2:
        if $i0 == 2 goto label1;

     label3:
        $r3 = new de.ecspride.Button2;
        specialinvoke $r3.<de.ecspride.Button2: void <init>()>();
        $r4 = new de.ecspride.Button2$1;
        specialinvoke $r4.<de.ecspride.Button2$1: void <init>(de.ecspride.Button2)>($r3);
        if $i0 == 3 goto label6;

     label4:
        if $i0 == 4 goto label5;

        $r5 = new android.view.View;
        specialinvoke $r5.<android.view.View: void <init>()>();
        virtualinvoke $r4.<de.ecspride.Button2$1: void onClick(android.view.View)>($r5);
        $r5 = null;

     label5:
        if $i0 == 5 goto label4;

     label6:
        $r6 = new de.ecspride.Button2;
        specialinvoke $r6.<de.ecspride.Button2: void <init>()>();
        if $i0 == 6 goto label15;

     label7:
        $r7 = new android.os.Bundle;
        specialinvoke $r7.<android.os.Bundle: void <init>()>();
        virtualinvoke $r6.<de.ecspride.Button2: void onCreate(android.os.Bundle)>($r7);
        $r7 = null;

     label8:
        $r8 = new de.ecspride.Button2$1;
        specialinvoke $r8.<de.ecspride.Button2$1: void <init>(de.ecspride.Button2)>($r6);
        if $i0 == 7 goto label9;

        $r9 = new android.view.View;
        specialinvoke $r9.<android.view.View: void <init>()>();
        virtualinvoke $r8.<de.ecspride.Button2$1: void onClick(android.view.View)>($r9);
        $r9 = null;

     label9:
        if $i0 == 8 goto label10;

        $r10 = new android.view.View;
        specialinvoke $r10.<android.view.View: void <init>()>();
        virtualinvoke $r6.<de.ecspride.Button2: void clickOnButton3(android.view.View)>($r10);
        $r10 = null;

     label10:
        $r11 = new de.ecspride.Button2$2;
        specialinvoke $r11.<de.ecspride.Button2$2: void <init>(de.ecspride.Button2)>($r6);
        if $i0 == 9 goto label11;

        $r12 = new android.view.View;
        specialinvoke $r12.<android.view.View: void <init>()>();
        virtualinvoke $r11.<de.ecspride.Button2$2: void onClick(android.view.View)>($r12);
        $r12 = null;

     label11:
        if $i0 == 10 goto label8;

        if $i0 == 11 goto label8;

        if $i0 == 12 goto label12;

        if $i0 == 13 goto label8;

        if $i0 == 14 goto label7;

     label12:
        if $i0 == 15 goto label14;

        if $i0 == 16 goto label13;

        if $i0 == 17 goto label7;

     label13:
        if $i0 == 18 goto label8;

     label14:
        if $i0 == 19 goto label15;

     label15:
        if $i0 == 20 goto label0;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
Total methods: 40225
Initially reachable methods: 7
Classes with at least one reachable method: 6
[Spark] Pointer Assignment Graph in 0.3 seconds.
Total types: 5868
[Spark] Type masks in 0.0 seconds.
VarNodes: 633
FieldRefNodes: 35
AllocNodes: 268
Cleaning up graph for merged nodes
Done cleaning up graph for merged nodes
[Spark] Pointer Graph simplified in 0.0 seconds.
Worklist has 268 nodes.
Now handling field references
Worklist has 27 nodes.
Now handling field references
Worklist has 55 nodes.
Now handling field references
Worklist has 2 nodes.
Now handling field references
[Spark] Propagation in 1.0 seconds.
[Spark] Solution found in 3.8 seconds.
[Spark] Number of reachable methods: 531
Total time to finish: 42.29
=================================================
# edges = 20
=================================================

elapsed time: 44.70s
